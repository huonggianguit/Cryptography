<Application x:Class="Finance_Pro.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:Finance_Pro"
             xmlns:mv="clr-namespace:Finance_Pro.Dashboard"
             StartupUri="Login\LoginWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/assets/icons.xaml"/>
                <ResourceDictionary Source="/dashboard/dashboardtemplates.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!--Default Style for Path's-->
            <Style  TargetType="{x:Type Path}">
                <Setter Property="Height" Value="20"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Stretch" Value="Uniform"/>
                <!-- To-Do: Add animation later -->
            </Style>
            <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}" >
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="Width" Value="50"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <Path 
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    Data="{TemplateBinding Content}"
                                    Fill="{TemplateBinding Foreground}"
                                    Style="{StaticResource {x:Type Path}}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="btn_TabSelect" TargetType="{x:Type RadioButton}">
                <Setter Property="GroupName" Value="btn_Select"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border 
                                CornerRadius="8" Margin="1"
                                x:Name="BorderBack">
                                <Border.Background>
                                    <SolidColorBrush x:Name="BorderBackground"
                                             Color="#F3F3F3" />
                                </Border.Background>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Border 
                                        x:Name="LineFocus"
                                        Grid.Column="0"
                                        Width="4"
                                        Margin="2,10,0,10"
                                        HorizontalAlignment="Left"
                                        CornerRadius="2"
                                        Visibility="Hidden"
                                        Background="BlueViolet">
                                    </Border>
                                    <StackPanel
                                        x:Name="StackPanelSize"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        Grid.Column="1">
                                        
                                    <Border
                                        x:Name="BorderIcon"
                                        Margin="10,0,0,0"
                                        Background="Transparent"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                            <Icon:PackIconMaterial Kind="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   Width="20" 
                                                   Height="20"/>
                                        </Border>
                                        
                                        <TextBlock
                                            x:Name="txt"
                                            Text="{TemplateBinding Content}"
                                            FontWeight="SemiBold"
                                            FontFamily="Montserrat"
                                            VerticalAlignment="Center"
                                            Margin="15,0,0,0"
                                            FontSize="20"
                                            Foreground="Black"
                                            HorizontalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="#EAEAEA"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Border.MouseEnter"
                                              SourceName="BorderBack">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#F3F3F3"
                                                    To="#EAEAEA"
                                                    Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Border.MouseLeave"
                                              SourceName="BorderBack">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="BorderBackground"
                                                    Storyboard.TargetProperty="Color"
                                                    From="#EAEAEA"
                                                    To="#F3F3F3"
                                                    Duration="0:0:0.1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                
                                <DataTrigger Binding="{Binding StatusMenu}" Value="MaxMenu">
                                    <Setter 
                                        TargetName="StackPanelSize"
                                        Property="HorizontalAlignment" Value="Left"/>
                                    <Setter
                                        TargetName="StackPanelSize"
                                        Property="Orientation" Value="Horizontal"/>
                                </DataTrigger>
                                
                                <DataTrigger Binding="{Binding StatusMenu}" Value="MiniMenu">
                                    <Setter
                                        TargetName="StackPanelSize"
                                        Property="HorizontalAlignment" Value="Center"/>
                                    <Setter
                                        TargetName="StackPanelSize"
                                        Property="Orientation" Value="Vertical"/>
                                </DataTrigger>

                                
                                <DataTrigger Binding="{Binding StatusMenu}" Value="MaxMenu">
                                    
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard SpeedRatio="10">
                                                <DoubleAnimation
                                                    Storyboard.TargetName="txt"
                                                    Storyboard.TargetProperty="FontSize"
                                                    To="20" />

                                                <ThicknessAnimation 
                                                    Storyboard.TargetName="txt"
                                                    Storyboard.TargetProperty="Margin" To="15,0,0,0"/>


                                                <ThicknessAnimation 
                                                    Storyboard.TargetName="BorderIcon"
                                                    Storyboard.TargetProperty="Margin" To="10,0,0,0"/>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>

                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard SpeedRatio="15">
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="txt"
                                                    Storyboard.TargetProperty="FontSize" To="13"/>
                                                
                                                <ThicknessAnimation 
                                                    Storyboard.TargetName="txt"
                                                    Storyboard.TargetProperty="Margin" To="0,10,0,0"/>

                                                <ThicknessAnimation 
                                                    Storyboard.TargetName="BorderIcon"
                                                    Storyboard.TargetProperty="Margin" To="0"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                                
                                <Trigger Property="IsChecked" 
                                         Value="True">
                                    <Setter Property="Background"
                                            TargetName="BorderBack"
                                            Value="#EAEAEA" />
                                    <Setter Property="Visibility"
                                            TargetName="LineFocus"
                                            Value="Visible" />
                                    <Setter Property="Foreground"
                                            TargetName="txt"
                                            Value="Red" />
                                </Trigger>
                                
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                            </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding StatusMenu}" Value="MaxMenu">
                        <Setter Property="Height" Value="40"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding StatusMenu}" Value="MiniMenu">
                        <Setter Property="Height" Value="60"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="CircleButtonTraffic" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="10">
                                <Icon:PackIconMaterial 
                                    Kind="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center"
                                    Width="15"
                                    Height="15"/>
                                <Border.Style>
                                    <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Black"/>
                                        </Trigger>
                                    </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </ControlTemplate>                    
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CircleButtonTrafficv2" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="10">
                                <Icon:PackIconMaterial 
                         Kind="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                         VerticalAlignment="Center"
                         HorizontalAlignment="Center"
                         Width="5"
                         Height="5"/>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="Black"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ImageBrush x:Key="ThumbIcon_Default" ImageSource="Assets/Thumb_Icon_Default.png"/>
            <ImageBrush x:Key="ThumbIcon_MouseOver" ImageSource="Assets/Thumb_Icon_MouseOver.png"/>

            <Style x:Key="ScrollBar_Thumb" TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">

                            <Border 
                     x:Name="border"
                     Background="{StaticResource ThumbIcon_Default}"
                     SnapsToDevicePixels="True">
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ThumbIcon_MouseOver}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ThumbIcon_MouseOver}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// Style for Track of scrollbar //-->

            <Style x:Key="ScrollBar_Track" TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="IsTabStop" Value="False"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--// Repeat Button style on MouseOver //-->

            <ImageBrush x:Key="UpArrow_MouseOver" ImageSource="Assets/Up_Arrow_MouseOver.png"/>

            <Style x:Key="ScrollBar_UpArrow" TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">

                            <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                         Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource UpArrow_MouseOver}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource UpArrow_MouseOver}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


            <ImageBrush x:Key="DownArrow_MouseOver" ImageSource="Assets/Down_Arrow_MouseOver.png"/>

            <Style x:Key="ScrollBar_DownArrow" TargetType="{x:Type RepeatButton}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">

                            <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"
                         Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource DownArrow_MouseOver}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DownArrow_MouseOver}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Application.Resources>
    
</Application>
